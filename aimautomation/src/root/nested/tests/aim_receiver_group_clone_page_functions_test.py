'''
Created on 13 Jun 2013

@author: Mark.rowlands
'''
from root.nested.tests.base_aim_regression_test import BaseAimRegressionTest


class AimReceiverGroupClonePageFunctionsTest(BaseAimRegressionTest):

    def test_can_clone_existing_change_group(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        name = self._page.get_receiver_group_name(groups[-1])
        self.assertEqual(name[-6:], "(Copy)")
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_name(self):
        test = "New Name"
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.set_receiver_group_name(test)
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        name = self._page.get_receiver_group_name(groups[-1])
        self.assertEqual(name, test)
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_desc(self):
        test = "New Desc"
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.set_receiver_group_description(test)
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        desc = self._page.get_receiver_group_description(groups[-1])
        self.assertEqual(desc, test)
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_login_required(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_login_required_no()
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        state = self._page.get_state_of_rx_group_login_required("no")
        self.assertTrue(state)
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_enable_receiver_osd_alerts(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_osd_alerts_no()
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue(self._page.get_state_receiver_group_osd_alerts("no"))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_enable_video_compatibility_check(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_video_compatibility_no()
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        state = self._page.get_state_rx_group_video_compatibility("no")
        self.assertTrue(state)
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_member_receivers(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.add_member_receiver_to_receiver_group("RX2")
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue("RX2"
                        in self._page.get_all_rxs_in_receiver_group())
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_users(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self._page.add_user_to_receiver_group("user 0")
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self.assertTrue("user 0"
                        in self._page.get_all_users_of_receiver_group())
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()

    def test_can_change_receiver_group_user_groups(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self._page.add_user_group_to_receiver_group("group 0")
        self._page.click_save()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self.assertTrue("group 0"
                        in self._page.get_selected_user_groups_of_rx_group())
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
