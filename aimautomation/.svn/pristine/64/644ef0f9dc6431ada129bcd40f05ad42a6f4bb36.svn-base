'''
Created on 13 Jun 2013

@author: Mark.rowlands
'''
from root.nested.tests.base_aim_regression_test import BaseAimRegressionTest

class AimReceiverGroupClonePageFunctionsTest(BaseAimRegressionTest):
    
    def test_can_clone_existing_change_group(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self.assertEqual(self._page.get_receiver_group_name(groups[-1])[-6:], "(Copy)")
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
     
    def test_can_change_receiver_group_name(self):
        name = "New Name"
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.set_receiver_group_name_via_config_page(name)
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self.assertEqual(self._page.get_receiver_group_name(groups[-1]), name)
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
     
    def test_can_change_receiver_group_desc(self):
        desc = "New Desc"
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.set_receiver_group_description_via_config_page(desc)
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self.assertEqual(self._page.get_receiver_group_description(groups[-1]), desc)
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
 
    def test_can_change_receiver_group_login_required(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_login_required_no()
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue(self._page.is_option_selected_by_div_text_and_id("Login Required", "rg_login_required_0"))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
 
    def test_can_change_receiver_group_enable_receiver_osd_alerts(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_osd_alerts_no()
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue(self._page.is_option_selected_by_div_text_and_id("Enable receiver OSD Alerts", "rg_osd_alerts_0"))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
 
 
    def test_can_change_receiver_group_enable_video_compatibility_check(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.select_receiver_group_video_compatibility_no()
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        self._page.confirm_no_longer_on_clone_receiver_group_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue(self._page.is_option_selected_by_div_text_and_id("Enable Video Compatibility Check", "rg_video_compatibility_check_0"))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
         
    def test_can_change_receiver_group_member_receivers(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        receiver_name = self._page.get_first_receiver_name_from_add_select()
        self._page.add_member_receiver_to_receiver_group(receiver_name)
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self.assertTrue(self._page.check_receiver_name_is_member_of_receiver_group(receiver_name))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
 
    def test_can_change_receiver_group_users(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        name = self._page.get_first_user_name_from_add_select()
        self._page.add_user_to_receiver_group(name)
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self.assertTrue(self._page.check_user_has_receiver_group_permission(name))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
 
    def test_can_change_receiver_group_user_groups(self):
        self._page.open_AIM_homepage_on_base_url()
        self._page.login_as("admin", "password", False)
        self._page.open_receivers_tab()
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        name = self._page.get_first_user_group_name_from_add_select()
        self._page.add_user_group_to_receiver_group(name)
        self._page.click_save()
        self._page.check_for_error_message("configure_receiver_group_ajax_message")
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_clone(groups[-1])
        self._page.show_user_permissions()
        self.assertTrue(self._page.check_user_group_has_receiver_group_permission(name))
        self._page.open_view_receiver_groups_page()
        groups = self._page.get_list_of_receiver_groups()
        self._page.click_receiver_group_delete(groups[-1])
        self._page.click_lightbox_delete_button()
